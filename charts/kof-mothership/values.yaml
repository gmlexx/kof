global:
  clusterLabel: clusterName
  storageClass: standard
  clusterName: mothership
  random_username_length: 8
  random_password_length: 12
kcm:
  installTemplates: false
  serviceMonitor:
    enabled: true
  namespace: kcm-system
  kof:
    repo:
      name: kof
      type: oci
      url: oci://ghcr.io/k0rdent/kof/charts
      insecure: false
    charts:
      operators:
        version: "0.1.0"
      collectors:
        version: "0.1.0"
      storage:
        version: "0.1.0"
    clusterProfiles:
      kof-storage-secrets:
        matchLabels:
          k0rdent.mirantis.com/kof-storage-secrets: "true"
        create_secrets: true
        secrets:
          - storage-vmuser-credentials
victoriametrics:
  enabled: true
  vmcluster:
    enabled: true
    replicationFactor: 1
    replicaCount: 1
    vmselect:
      storage:
        size: 2Gi
    vmstorage:
      storage:
        size: 10Gi
  vmalert:
    enabled: true
    remoteRead: ""
    vmalertmanager: 
      config: |
grafana:
  enabled: true
  ingress:
    enabled: false
    host: grafana.example.net
  alerts:
    enabled: true
  logSources: []
  security:
    credentials_secret_name: grafana-admin-credentials
    create_secret: true
victoria-metrics-operator:
  enabled: true
  crds:
    plain: true
cluster-api-visualizer:
  enabled: true
sveltos-dashboard:
  enabled: true
sveltos:
  serviceMonitors: true
  grafanaDashboard: true
promxy:
  replicaCount: 1
  enabled: true
  image:
    repository: quay.io/jacksontj/promxy
    tag: "latest"
    pullPolicy: IfNotPresent
  serviceAccount:
    create: true
    annotations: {}
    # If not set, generated using the fullname template
    name:
  operator:
    rbac:
      create: true
    image:
      repository: ghcr.io/k0rdent/kof/promxy-operator-controller
      tag: "latest"
      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 100m
        memory: 64Mi
      limits:
        cpu: 100m
        memory: 64Mi
  service:
    type: ClusterIP
    enabled: true
    servicePort: 8082
    annotations: {}
    extraLabels: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
  ingress:
    enabled: false
    ingressClassName: nginx
    annotations: {}
    extraLabels: {}
    path: /
    pathType: Prefix
    hosts:
      - example.com
    tls: []
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 128Mi
  extraArgs:
    log-level: "info"
  config:
    remoteWriteUrl: http://vminsert-cluster:8480/insert/0/prometheus/api/v1/write
  configmapReload:
    resources:
      requests:
        cpu: 0.02
        memory: 20Mi
      limits:
        cpu: 0.02
        memory: 20Mi