global:
  clusterLabel: clusterName
  clusterName: mothership
kof:
  basic_auth: true
  logs:
    endpoint: http://kof-storage-victoria-logs-single-server:9428/insert/opentelemetry/v1/logs
    credentials_secret_name: storage-vmuser-credentials
    username_key: username
    password_key: password
  metrics:
    endpoint: http://vminsert-cluster:8480/insert/0/prometheus/api/v1/write
    credentials_secret_name: storage-vmuser-credentials
    username_key: username
    password_key: password
  traces:
    endpoint: http://kof-storage-jaeger-collector:4318
  instrumentation:
    enabled: true
    resources:
      requests:
        memory: 128Mi
      limits:
        memory: 128Mi
kcm:
  # -- Enable kcm manager and other components monitoring
  monitoring: false
  # -- K8s namespace created on installation of k0rdent/kcm.
  namespace: kcm-system

prometheus-node-exporter:
  enabled: true
  hostNetwork: false
  service:
    labels:
      jobLabel: node-exporter
  extraArgs:
    - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
  prometheus:
    monitor:
      enabled: true
      http:
        honorLabels: true
      relabelings:
        - action: replace
          sourceLabels:
            - __meta_kubernetes_pod_node_name
          targetLabel: nodename
kube-state-metrics:
  enabled: true
  prometheus:
    monitor:
      enabled: true
      http:
        honorLabels: true
collectors:
  enabled: true
  k8scluster:
    receivers:
      prometheus:
        config:
          scrape_configs:
            - job_name: "apiserver"
              kubernetes_sd_configs:
                - role: endpoints
              relabel_configs:
                - replacement: kubernetes.default.svc.cluster.local:443
                  target_label: __address__
                - regex: (.+)
                  replacement: /api/v1/nodes/$${1}/proxy/metrics
                  source_labels:
                    - __meta_kubernetes_node_name
                  target_label: __metrics_path__
                - source_labels: [__meta_kubernetes_node_name]
                  target_label: node
              scheme: https
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: false
                server_name: kubernetes
      k8s_cluster:
        allocatable_types_to_report:
          - cpu
          - memory
          - storage
        auth_type: serviceAccount
        collection_interval: 10s
        node_conditions_to_report:
          - Ready
          - MemoryPressure
          - DiskPressure
          - NetworkUnavailable
      k8s_events:
        auth_type: serviceAccount
    processors:
      batch: {}
    exporters:
      debug: {}
    extensions: {}
    service:
      pipelines:
        logs:
          exporters:
            - otlphttp
            - debug
          processors:
            - resource/k8s_events
            - batch
          receivers:
            - k8s_events
        metrics:
          exporters:
            - prometheusremotewrite
          processors:
            - batch
          receivers:
            - k8s_cluster
            - prometheus
  node:
    run_as_root: false
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318

      filelog/kube:
        exclude:
          # Exclude logs from all containers named otel-collector
          - /var/log/pods/*/otc-container/*.log
        include:
          - /var/log/pods/*/*/*.log
        include_file_name: false
        include_file_path: true
        operators:
          - id: container-parser
            max_log_size: 102400
            type: container
          - type: regex_parser
            id: extract_metadata_from_filepath
            regex: '^.*\/(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<uid>[a-f0-9\-]{36})\/(?P<container_name>[^\._]+)\/(?P<restart_count>\d+)\.log$'
            parse_from: attributes["log.file.path"]
            on_error: drop_quiet
          - type: move
            from: attributes.container_name
            to: resource["k8s.container.name"]
          - type: move
            from: attributes.namespace
            to: resource["k8s.namespace.name"]
          - type: move
            from: attributes.pod_name
            to: resource["k8s.pod.name"]
          - type: move
            from: attributes.restart_count
            to: resource["k8s.container.restart_count"]
          - type: move
            from: attributes.uid
            to: resource["k8s.pod.uid"]

          - type: regex_parser
            id: extract_log_level
            regex: '(?i)(?P<log_level>(panic|fatal|crit|alert|emerg|err(?:or)?|warn(?:ing)?|info|debug|notice|trace|[EFDWI]\d{4}))'
            parse_from: body
            on_error: send_quiet

          - type: regex_parser
            id: extract_short_letter
            if: '("log_level" in attributes)'
            parse_from: attributes["log_level"]
            regex: '(?i)(?P<log_level>[EFDWI])\d{4}'
            on_error: send_quiet

          - type: add
            if: '!("log_level" in attributes)'
            field: attributes.log_level
            value: "info"

          - type: severity_parser
            preset: none
            overwrite_text: true
            parse_from: attributes.log_level
            mapping:
              fatal:
                - fatal
                - crit
                - alert
                - emerg
                - panic
                - f
              error:
                - error
                - err
                - failed
                - e
              warn:
                - warn
                - warning
                - w
              info:
                - info
                - notice
                - trace
                - i
              debug:
                - debug
                - d

          - type: remove
            field: attributes.log_level

            cache:
              size: 128 # default maximum amount of Pods per Node is 110
        retry_on_failure:
          enabled: true
        start_at: end

      prometheus:
        api_server:
          enabled: true
          server_config:
            endpoint: "localhost:9090"
        config:
          scrape_configs:
            - job_name: "istiod"
              kubernetes_sd_configs:
                - role: endpoints
                  namespaces:
                    names:
                      - istio-system
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_label_app]
                  target_label: app
                - source_labels:
                    [
                      __meta_kubernetes_service_name,
                      __meta_kubernetes_endpoint_port_name,
                    ]
                  action: keep
                  regex: istiod;http-monitoring
            - job_name: "envoy-stats"
              metrics_path: /stats/prometheus
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_label_app]
                  target_label: app
                - source_labels: [__meta_kubernetes_pod_container_port_name]
                  action: keep
                  regex: ".*-envoy-prom"
            - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              job_name: integrations/kubernetes/cadvisor
              honor_labels: true
              kubernetes_sd_configs:
                - role: node
              relabel_configs:
                - replacement: kubernetes.default.svc.cluster.local:443
                  target_label: __address__
                - regex: (.+)
                  replacement: /api/v1/nodes/$${1}/proxy/metrics/cadvisor
                  source_labels:
                    - __meta_kubernetes_node_name
                  target_label: __metrics_path__
              metric_relabel_configs:
                - source_labels: [__name__]
                  action: keep
                  regex: "container_cpu_cfs_periods_total|container_cpu_cfs_throttled_periods_total|container_cpu_usage_seconds_total|container_fs_reads_bytes_total|container_fs_reads_total|container_fs_writes_bytes_total|container_fs_writes_total|container_memory_cache|container_memory_rss|container_memory_swap|container_memory_working_set_bytes|container_network_receive_bytes_total|container_network_receive_packets_dropped_total|container_network_receive_packets_total|container_network_transmit_bytes_total|container_network_transmit_packets_dropped_total|container_network_transmit_packets_total|machine_memory_bytes|machine_cpu_cores|container_cpu_cfs_throttled_seconds_total|container_oom_events_total|container_network_receive_errors_total|container_network_transmit_errors_total"
              scheme: https
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: false
                server_name: kubernetes

            - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              job_name: integrations/kubernetes/kubelet
              honor_labels: true
              kubernetes_sd_configs:
                - role: node
              relabel_configs:
                - replacement: kubernetes.default.svc.cluster.local:443
                  target_label: __address__
                - regex: (.+)
                  replacement: /api/v1/nodes/$${1}/proxy/metrics
                  source_labels:
                    - __meta_kubernetes_node_name
                  target_label: __metrics_path__
              metric_relabel_configs:
                - source_labels: [__name__]
                  action: keep
                  regex: "container_cpu_usage_seconds_total|kubelet_certificate_manager_client_expiration_renew_errors|kubelet_certificate_manager_client_ttl_seconds|kubelet_certificate_manager_server_ttl_seconds|kubelet_cgroup_manager_duration_seconds_bucket|kubelet_cgroup_manager_duration_seconds_count|kubelet_node_config_error|kubelet_node_name|kubelet_pleg_relist_duration_seconds_bucket|kubelet_pleg_relist_duration_seconds_count|kubelet_pleg_relist_interval_seconds_bucket|kubelet_pod_start_duration_seconds_bucket|kubelet_pod_start_duration_seconds_count|kubelet_pod_worker_duration_seconds_bucket|kubelet_pod_worker_duration_seconds_count|kubelet_running_container_count|kubelet_running_containers|kubelet_running_pod_count|kubelet_running_pods|kubelet_runtime_operations_errors_total|kubelet_runtime_operations_total|kubelet_server_expiration_renew_errors|kubelet_volume_stats_available_bytes|kubelet_volume_stats_used_bytes|kubelet_volume_stats_capacity_bytes|kubelet_volume_stats_inodes|kubelet_volume_stats_inodes_used|kubernetes_build_info|namespace_workload_pod|rest_client_requests_total|storage_operation_duration_seconds_count|storage_operation_errors_total|volume_manager_total_volumes"
              scheme: https
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: false
                server_name: kubernetes
    processors:
      k8sattributes:
        auth_type: serviceAccount
        passthrough: false
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.uid
        extract:
          metadata:
            - k8s.node.name
      batch: {}
    extensions: {}
    exporters:
      debug:
        verbosity: basic
    service:
      pipelines:
        traces:
          receivers:
            - otlp
          processors:
            - batch
          exporters:
            - debug
            - otlphttp/traces
        logs:
          receivers:
            - otlp
            - filelog/kube
          processors:
            - k8sattributes
            - batch
          exporters:
            - otlphttp/logs
            - debug
        metrics:
          receivers:
            - otlp
            - prometheus
          processors:
            - batch
          exporters:
            - prometheusremotewrite

opencost:
  enabled: true
  opencost:
    prometheus:
      existingSecretName: storage-vmuser-credentials
      username_key: username
      password_key: password
      external:
        enabled: true
        url: https://vmselect-cluster:8481/select/0/prometheus
      internal:
        enabled: false
    metrics:
      serviceMonitor:
        enabled: true
    exporter:
      defaultClusterId: "mothership"
      extraEnv:
        EMIT_KSM_V1_METRICS: "false"
        EMIT_KSM_V1_METRICS_ONLY: "true"
